flush_rules4() {

  # Not assuming a given state. Flushing all rules and configuring a
  # default posture of accept all with no rules.
  ${raw4} -F; ${raw4} -X
  ${raw4} -P PREROUTING ACCEPT
  ${raw4} -P OUTPUT ACCEPT

  ${man4} -F; ${man4} -X
  ${man4} -P PREROUTING ACCEPT
  ${man4} -P INPUT ACCEPT
  ${man4} -P FORWARD ACCEPT
  ${man4} -P OUTPUT ACCEPT
  ${man4} -P POSTROUTING ACCEPT

  ${nat4} -F; ${nat4} -X
  ${nat4} -P PREROUTING ACCEPT
  ${nat4} -P INPUT ACCEPT
  ${nat4} -P OUTPUT ACCEPT
  ${nat4} -P POSTROUTING ACCEPT

  ${ipv4} -F; ${ipv4} -X
  ${ipv4} -P INPUT ACCEPT
  ${ipv4} -P FORWARD ACCEPT
  ${ipv4} -P OUTPUT ACCEPT

  ${sec4} -F; ${sec4} -X
  ${sec4} -P INPUT ACCEPT
  ${sec4} -P FORWARD ACCEPT
  ${sec4} -P OUTPUT ACCEPT

}

core_rules4() {

  ## To kick start developement. I'm going to only filter outbound traffic,
  #+ and permit input that is established. Or defined as acceptable
  ${ipv4} -P INPUT DROP
  ${ipv4} -P FORWARD DROP
  ${ipv4} -P OUTPUT ACCEPT

  ${ipv4} -A INPUT -i lo -j ACCEPT
  ${ipv4} -A INPUT -p icmp -m conntrack --ctstate NEW -j DROP
  ${ipv4} -A INPUT -p icmp -j ACCEPT

  ## fiendtlig-territorium defined chains

  # mangle
  ${man4} -N mangle-iTCP4
  ${man4} -A mangle-iTCP4 -p tcp -m conntrack --ctstate NEW \
   -m tcpmss ! --mss 536:65535 -j DROP
  ${man4} -A mangle-iTCP4 -p tcp --tcp-flags FIN,SYN FIN,SYN -j DROP
  ${man4} -A mangle-iTCP4 -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
  ${man4} -A mangle-iTCP4 -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
  ${man4} -A mangle-iTCP4 -p tcp --tcp-flags FIN,ACK FIN -j DROP
  ${man4} -A mangle-iTCP4 -p tcp --tcp-flags ACK,PSH PSH -j DROP
  ${man4} -A mangle-iTCP4 -p tcp --tcp-flags ACK,URG URG -j DROP
  ${man4} -A mangle-iTCP4 -p tcp --tcp-flags ALL NONE -j DROP
  ${man4} -A mangle-iTCP4 -p tcp --tcp-flags RST RST \
   -m limit --limit 2/s --limit-burst 2 -j RETURN
  ${man4} -A mangle-iTCP4 -p tcp --tcp-flags RST RST -j DROP

  # filter
  ${ipv4} -N iLAD4
  ${ipv4} -A iLAD4 -m limit --limit 10/min \
   -j LOG --log-prefix "iptables INPUT deny: " --log-level 7
  ${ipv4} -A iLAD4 -j DROP
#  ${ipv4} -N iLAR4  ## TODO: I need to reason out abusive signatures for drop

  # 'iTCP4'
  ${ipv4} -N iTCP4
  ${ipv4} -A iTCP4 -p tcp -m connlimit --connlimit-above 80 \
   -j REJECT --reject-with tcp-reset
  ${ipv4} -A iTCP4 -p tcp -m recent --update --rsource --seconds 60 \
   --name TCP4-PSCAN -j REJECT --reject-with tcp-reset

  # 'iUDP4'
  ${ipv4} -N iUDP4
  ${ipv4} -A iUDP4 -p udp -m recent --update --rsource --seconds 60 \
   --name UDP4-PSCAN -j REJECT --reject-with icmp-port-unreachable

  ## 'PREROUTING'
  # -- raw, nat, mangle
  ${man4} -A PREROUTING -m conntrack --ctstate INVALID -j DROP
  ${man4} -A PREROUTING -m rpfilter --invert -j DROP
  ${man4} -A PREROUTING -f -j DROP
  ${man4} -A PREROUTING -p tcp -j mangle-iTCP4

  ## 'INPUT'
  # -- filter, mangle, security
  ${ipv4} -A INPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT
  ${ipv4} -A INPUT -p tcp -m conntrack --ctstate NEW \
   -m limit --limit 60/s --limit-burst 20 -j iTCP4
  ${ipv4} -A INPUT -p udp -m conntrack --ctstate NEW -j iUDP4
  ${ipv4} -A INPUT -p tcp -m recent --set --rsource --name TCP4-PSCAN \
   -j REJECT --reject-with tcp-reset
  ${ipv4} -A INPUT -p udp -m recent --set --rsource --name UDP4-PSCAN \
   -j REJECT --reject-with icmp-port-unreachable
  ${ipv4} -A INPUT -j REJECT --reject-with icmp-proto-unreachable

  ## 'FORWARD'
  # -- filter, mangle, security

  ## 'OUTPUT'
  # -- raw, filter, nat, mangle, security

  ## 'POSTROUTING'
  # -- nat, mangle

}
